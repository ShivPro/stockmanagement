/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package stockmanagement;

import Smdb.ConnectDB;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JFrame;

/**
 *
 * @author Stalwart
 */
public class CheckOfStock extends javax.swing.JPanel {
    ConnectDB objConDB;
    PreparedStatement ps;
    String strItemName,strItemCode,strCompany,strQuantity,strAmount;
    public CheckOfStock() {
        initComponents();
        objConDB=new ConnectDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btOk = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbCategory = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cbSearchBy = new javax.swing.JComboBox();
        cbAll = new javax.swing.JCheckBox();

        tfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfSearchActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CHECK FOR STOCK");

        btOk.setText("ok");
        btOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOkActionPerformed(evt);
            }
        });

        jLabel3.setText("Search By:");

        cbCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lubricants", "Gaurds", "Nut&Bolts", " " }));
        cbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCategoryActionPerformed(evt);
            }
        });

        jLabel4.setText("Category:");

        cbSearchBy.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ItemCode", "ItemName" }));

        cbAll.setText("All");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(5, 5, 5)
                        .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(cbSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btOk, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cbSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btOk)
                    .addComponent(cbAll))
                .addContainerGap(140, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSearchActionPerformed

    private void cbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCategoryActionPerformed

    private void btOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOkActionPerformed
      String strCategory=cbCategory.getSelectedItem().toString().trim();
      String strSearchBy=cbSearchBy.getSelectedItem().toString().trim();
      String strSearch=tfSearch.getText().toString().trim();
     
        Connection con= objConDB.connect();
        ResultSet rs = null;
        try{
           Statement stmt= con.createStatement();
            System.out.println(strSearchBy);
                if(strCategory.equals("Gaurds"))
                {
                    if(strSearchBy.equals("ItemCode"))
                        {
                    rs=stmt.executeQuery("select * from Gaurds where ItemCode='"+strSearch+"'");
                        }
                     if(strSearchBy.equals("ItemName"))
                        {
                 rs=stmt.executeQuery("select * from Gaurds where ItemName='"+strSearch+"'");
                        }
                     if(cbAll.isSelected())
                         {
                    rs=stmt.executeQuery("select * from Gaurds");
                         }
                }
    
              if(strCategory.equals("Lubricants"))
                {
                    if(strSearchBy.equals("ItemCode")) 
                            {         
                    rs=stmt.executeQuery("select * from Lubricants where ItemCode='"+strSearch+"'");
                            }
                      if(strSearchBy.equals("ItemName"))
                            {
                 rs=stmt.executeQuery("select * from Lubricants where ItemName='"+strSearch+"'");
                            }
                      if(cbAll.isSelected())
                     {
                        rs=stmt.executeQuery("select * from Lubricants");
                     }
                }
              
         if(strCategory.equals("Nut&bolts"))
         {
             if(strSearchBy.equals("ItemCode"))
                        {
                 rs=stmt.executeQuery("select * from Nut&Bolts where ItemCode='"+strSearch+"'");
                        }
              if(strSearchBy.equals("ItemName"))
                        {
                 rs=stmt.executeQuery("select * from Nut&Bolts where ItemName='"+strSearch+"'");
                        }
              if(cbAll.isSelected())
                {
             rs=stmt.executeQuery("select * from Nut&Bolts");
                }
         }
         
               
       JFrame fr=new JFrame();
       fr.add(new Details(rs));
       fr.setSize(500,500);
       fr.setVisible(true);
      
        }catch(Exception e){e.printStackTrace();}

      
      
    }//GEN-LAST:event_btOkActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btOk;
    private javax.swing.JCheckBox cbAll;
    private javax.swing.JComboBox cbCategory;
    private javax.swing.JComboBox cbSearchBy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
